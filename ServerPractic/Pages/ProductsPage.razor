@page "/product"
@using ServerPractic.Entities
@using Microsoft.EntityFrameworkCore
@inject DBContext Context;
@using System.Collections.Generic
@inject CartService CartService;


@if (Products == null)
{
    <p><em>Загрузка...</em></p>
}
else
{

    <h1 style="text-align: center; font-size: 55px; margin-top:40px">ТОВАРЫ</h1>
    <div class="catalog">

        <div style="display: flex; width: 100%;justify-content:center; flex-wrap: wrap; margin-top: 20px; gap: 79px;">
            @foreach (var product in Products)
            {

                <div class="catalog-item">

                    <li class="@(product.Available ? "" : "unavailable")">
                        <NavLink href=@product.url>
                            <div style="width: 100%; padding: 0 50px;">
                                <div class="catalog-img">
                                    <img src="@product.PhotoUrl" alt="@product.Name" />
                                    @if (product.Salebool == true)
                                    {
                                        <div class="sale">@product.Sales%</div>
                                      

                                    }
                                    @if (product.Salebool == false)
                                    {

                                    }
                                </div>
                            </div>
                        </NavLink>
                        <p style="margin-top: 8px; font-size: 25px; font-weight: 500; text-align: center; line-height:normal;">
                            <span style="color: #8b8b8b; font-weight: 700;">@product.ProductCategory</span>
                            <br>
                            <span style="font-weight: 900;">@product.Name</span>
                            <br>
                            @product.Description
                        </p>
                        <div style="display: flex; justify-content: space-between; margin-top: 15px;">
                            @if(product.Salebool == true)
                            {
                                <b style="font-family: AriBLK; font-size: 50px;">@product.SealProd₽</b>
                                
                            }
                            else{
                                <b style="font-family: AriBLK; font-size: 50px;">@product.Price₽</b>
                            }
                            @if (product.Available)
                            {
                                <button style="margin-top: 0; padding: 17px 30px; font-size: 26px;" class="buy-button" @onclick="() => AddToCart(product)">
                                    В КОРЗИНУ
                                    <svg width="30px" height="30px" viewBox="-1 -1 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                                        <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                                        <g id="SVGRepo_iconCarrier"> <path d="M4.5 5H18.2768C19.0446 5 19.526 5.82948 19.1451 6.49614L16.5758 10.9923C16.2198 11.6154 15.5571 12 14.8394 12H8M8 12L6.45625 14.47C6.03997 15.136 6.51881 16 7.30425 16H18M8 12L4.05279 4.10557C3.714 3.428 3.02148 3 2.26393 3H2M8 20C8 20.5523 7.55228 21 7 21C6.44772 21 6 20.5523 6 20C6 19.4477 6.44772 19 7 19C7.55228 19 8 19.4477 8 20ZM18 20C18 20.5523 17.5523 21 17 21C16.4477 21 16 20.5523 16 20C16 19.4477 16.4477 19 17 19C17.5523 19 18 19.4477 18 20Z" stroke="CurrentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path> </g>
                                    </svg>
                                </button>
                            }
                            else
                            {
                                <p class="out-of-stock">Нет в наличии</p>
                            }




                        </div>
                    </li>
                </div>

            }
        </div>
    </div>
}


@code {
    private List<ProductEntity> Products { get; set; }
    protected override void OnInitialized()
    {
        AddSomeProducts();
    }

    public void AddSomeProducts()
    {
        // Создаем несколько объектов ProductEntity
        ProductEntity product1 = new ProductEntity { ID = 1, ProductCategory = "КРЕАТИН", Name = "CREATINE 100% MONOHYDRATE", Description = "НЕСКОНЧАЕМЫЙ ЗАРЯД ЭНЕРГИИ ДЛЯ НОВЫХ ПОБЕД", Price = 3000, PhotoUrl = "/media/banka.png", Available = true, Salebool = false, url = "/maxiler" };
        ProductEntity product2 = new ProductEntity { ID = 2, ProductCategory = "ПРОТЕИН", Name = "BIG WHEY, вкус Мороженое", Description = "ДЛЯ НАБОРА МЫШЕЧНОЙ МАССЫ И ПОХУДЕНИЯ", Price = 1800, PhotoUrl = "/media/banka2.png", Available = true, url = "/bigwhey" };
        ProductEntity product3 = new ProductEntity { ID = 3, ProductCategory = "ПРОТЕИН", Name = "BIG WHEY, вкус Мороженое", Description = "ДЛЯ НАБОРА МЫШЕЧНОЙ МАССЫ И ПОХУДЕНИЯ", Price = 1800, PhotoUrl = "/media/banka2.png", Available = false };
        ProductEntity product4 = new ProductEntity { ID = 4, ProductCategory = "КРЕАТИН", Name = "CREATINE 100% MONOHYDRATE", Description = "НЕСКОНЧАЕМЫЙ ЗАРЯД ЭНЕРГИИ ДЛЯ НОВЫХ ПОБЕД", Price = 3000, PhotoUrl = "/media/banka.png", Available = true, Salebool = true, Sales = 30 };

        // Проверяем инициализацию списка
        if (Products == null)
        {
            Products = new List<ProductEntity>();
        }

        // Добавляем объекты в список Products
        Products.Add(product1);
        Products.Add(product2);
        Products.Add(product3);
        Products.Add(product4);
    }



    //добавление в корзину
    private void AddToCart(ProductEntity product)
    {
        CartService.AddToCart(product);
        Console.WriteLine($"Товар {product.Name} добавлен в корзину.");
    }
}
